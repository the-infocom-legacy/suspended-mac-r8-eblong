

	.FUNCT	GO
START::

?FCN:	SET	'HERE,IRIS
	SET	'LIT,1
	SET	'REDSET,REDCABLE
	SET	'ORANGESET,ORANGECABLE
	CALL	QUEUE,I-TREMOR1,ACID-KILLS
	PUT	STACK,0,1
	CALL	QUEUE,I-TREMOR2,RTD-KILLS
	PUT	STACK,0,1
	CALL	QUEUE,I-PEOPLE1,PEOPLE-APPEAR
	PUT	STACK,0,1
	CALL	QUEUE,I-AUDA-HINTS,PEOPLE-APPEAR
	PUT	STACK,0,1
	CALL	QUEUE,I-FOLLOW,-1
	PUT	STACK,0,1
	CALL	QUEUE,I-WEATHER,4
	PUT	STACK,0,1
	CALL	QUEUE,I-DECAY,5
	PUT	STACK,0,1
	CALL	QUEUE,I-FOOD,-1
	PUT	STACK,0,1
	CALL	QUEUE,I-WIRE-MESSAGE,-1
	PUT	STACK,0,1
	CALL	QUEUE,I-ROBOTKILLER,-1
	PUT	STACK,0,1
	CALL	QUEUE,I-SCORE,-1
	PUT	STACK,0,1
	CALL	QUEUE,I-IRIS-HINTS,-1
	PUT	STACK,0,1
	SET	'P-IT-OBJECT,0
	SET	'WINNER-HERE,CPU-ROOM
	FSET?	WINNER-HERE,TOUCHBIT /?CND1
	CALL	V-VERSION
	CRLF	
?CND1:	CALL	BEGINNING
	CALL	CHANGE-WINNER,IRIS,1
	CALL	V-ALL-REPORT-LOC
	CALL	SET-LAST-ROOM
	CALL	MAIN-LOOP
	JUMP	?FCN


	.FUNCT	CHANGE-WINNER,OBJ,TEMP?=0,L
	EQUAL?	OBJ,WINNER \?CND1
	ZERO?	TEMP? \?CND1
	PRINTI	"FC: Cryolink already established to "
	PRINTD	WINNER
	PRINTR	"."
?CND1:	GETP	OBJ,P?ROBOT
	GET	DEADBOTS,STACK
	GRTR?	STACK,29 \?CND8
	CALL	DEAD-FCN,OBJ
	RFALSE	
?CND8:	SET	'WINNER,OBJ
	SET	'OLD-WINNER,0
	LOC	OBJ >L
	IN?	L,ROOMS \?ELS15
	PUSH	L
	JUMP	?CND11
?ELS15:	LOC	L
?CND11:	SET	'WINNER-HERE,STACK
	GETP	WINNER,P?ROBOT >ROFF
	SET	'HERE,WINNER
	ZERO?	TEMP? \?CND18
	PRINTI	"FC: Cryolink established to "
	PRINTD	WINNER
	PRINTI	"."
	CRLF	
?CND18:	EQUAL?	WINNER,IRIS \?ELS27
	SET	'NUM-EXT,2
	RTRUE	
?ELS27:	EQUAL?	WINNER,WALDO \?ELS29
	SET	'NUM-EXT,6
	FSET?	SURGERY-HAND,WEARBIT \TRUE
	SET	'NUM-EXT,7
	RTRUE	
?ELS29:	EQUAL?	WINNER,SENSA \?ELS34
	SET	'NUM-EXT,3
	RTRUE	
?ELS34:	EQUAL?	WINNER,AUDA \?ELS36
	SET	'NUM-EXT,1
	RTRUE	
?ELS36:	EQUAL?	WINNER,POET \?ELS38
	SET	'NUM-EXT,3
	RTRUE	
?ELS38:	EQUAL?	WINNER,WHIZ \TRUE
	SET	'NUM-EXT,2
	RTRUE	


	.FUNCT	MAIN-LOOP,ICNT,OCNT,NUM,CNT,OBJ,TBL,V,PTBL,OBJ1,TMP,?TMP1
?PRG1:	SET	'CNT,0
	SET	'OBJ,0
	SET	'PTBL,1
	CALL	PARSER >P-WON
	ZERO?	P-WON /?ELS5
	GET	P-PRSI,P-MATCHLEN >ICNT
	GET	P-PRSO,P-MATCHLEN >OCNT
	ZERO?	OCNT \?ELS10
	PUSH	OCNT
	JUMP	?CND6
?ELS10:	GRTR?	OCNT,1 \?ELS12
	SET	'TBL,P-PRSO
	ZERO?	ICNT \?ELS15
	SET	'OBJ,0
	JUMP	?CND13
?ELS15:	GET	P-PRSI,1 >OBJ
?CND13:	PUSH	OCNT
	JUMP	?CND6
?ELS12:	GRTR?	ICNT,1 \?ELS19
	SET	'PTBL,0
	SET	'TBL,P-PRSI
	GET	P-PRSO,1 >OBJ
	PUSH	ICNT
	JUMP	?CND6
?ELS19:	PUSH	1
?CND6:	SET	'NUM,STACK
	ZERO?	OBJ \?CND22
	EQUAL?	ICNT,1 \?CND22
	GET	P-PRSI,1 >OBJ
?CND22:	EQUAL?	PRSA,V?WALK \?ELS29
	CALL	PERFORM,PRSA,PRSO >V
	JUMP	?CND27
?ELS29:	ZERO?	NUM \?ELS31
	GETB	P-SYNTAX,P-SBITS
	BAND	STACK,P-SONUMS
	ZERO?	STACK \?ELS34
	CALL	PERFORM,PRSA >V
	SET	'PRSO,0
	JUMP	?CND27
?ELS34:	EQUAL?	PRSA,V?$TELL \?ELS36
	PRINTI	"FC: I don't understand with which robot you wish to form a cryolink."
	CRLF	
	SET	'V,0
	JUMP	?CND27
?ELS36:	GET	ROBOT-NAMES,ROFF
	PRINT	STACK
	PRINTI	": "
	GET	NOT-CLEAR,ROFF
	PRINT	STACK
	PRINTI	" "
	GET	P-ITBL,P-VERBN >TMP
	ZERO?	P-OFLAG /?ELS45
	GET	TMP,0
	PRINTB	STACK
	JUMP	?CND43
?ELS45:	GETB	TMP,2 >?TMP1
	GETB	TMP,3
	CALL	WORD-PRINT,?TMP1,STACK
?CND43:	PRINTI	"!"
	CRLF	
	SET	'V,0
	JUMP	?CND27
?ELS31:	GRTR?	NUM,1 \?ELS52
	EQUAL?	PRSA,V?$TELL \?ELS52
	SET	'P-CACTOR,1
	GETB	P-LEXV,P-LEXWORDS >P-OPLEN
	SET	'P-OPCONT,P-CONT
	SET	'CNT,1
	PUT	P-ACTORS,0,NUM
?PRG55:	GRTR?	CNT,NUM \?ELS59
	JUMP	?REP56
?ELS59:	GET	P-PRSO,CNT >OBJ
	IN?	OBJ,GLOBAL-OBJECTS \?ELS66
	CALL	REAL-ROBOT,OBJ
	JUMP	?CND62
?ELS66:	PUSH	OBJ
?CND62:	PUT	P-ACTORS,CNT,STACK
?CND57:	INC	'CNT
	JUMP	?PRG55
?REP56:	ZERO?	P-TWOBOTS /?ELS71
	SET	'P-NACTORS,1
	CALL	ALL-THERE?
	ZERO?	STACK /?ELS75
	GET	P-ACTORS,1
	GETP	STACK,P?ROBOT
	ZERO?	STACK /?THN79
	GET	P-ACTORS,2
	GETP	STACK,P?ROBOT
	ZERO?	STACK /?THN79
	GET	P-ACTORS,2
	GETP	STACK,P?ROBOT
	EQUAL?	STACK,7 /?THN79
	GET	P-ACTORS,1
	GETP	STACK,P?ROBOT
	EQUAL?	STACK,7 \?ELS78
?THN79:	PRINTI	"FC: That's absurd!"
	CRLF	
	CALL	CHANGE-WINNER,OLD-WINNER
	JUMP	?PRG1
?ELS78:	PRINTI	"FC: Dual-Cryolink established to "
	GET	P-ACTORS,1
	PRINTD	STACK
	PRINTI	" and "
	GET	P-ACTORS,2
	PRINTD	STACK
	PRINTI	"."
	CRLF	
	SET	'WINNER,TWOBOTS
	SET	'ROFF,0
	GET	P-ACTORS,1
	LOC	STACK >WINNER-HERE
	JUMP	?CND27
?ELS75:	PRINTI	"FC: The robots are in different places."
	CRLF	
	CALL	CHANGE-WINNER,OLD-WINNER
	JUMP	?PRG1
?ELS71:	SET	'P-NACTORS,NUM
	GET	P-PRSO,1
	CALL	PERFORM,PRSA,STACK >V
	SET	'OLD-WINNER,0
	JUMP	?CND27
?ELS52:	
?PRG97:	IGRTR?	'CNT,NUM \?ELS101
	JUMP	?CND27
?ELS101:	ZERO?	PTBL /?ELS106
	GET	P-PRSO,CNT >OBJ1
	JUMP	?CND104
?ELS106:	GET	P-PRSI,CNT >OBJ1
?CND104:	GRTR?	NUM,1 \?CND110
	PRINTI	"("
	CALL	NDESC,OBJ1
	PRINTI	") "
?CND110:	ZERO?	PTBL /?ELS119
	PUSH	OBJ1
	JUMP	?CND115
?ELS119:	PUSH	OBJ
?CND115:	SET	'PRSO,STACK
	ZERO?	PTBL /?ELS127
	PUSH	OBJ
	JUMP	?CND123
?ELS127:	PUSH	OBJ1
?CND123:	SET	'PRSI,STACK
	CALL	PERFORM,PRSA,PRSO,PRSI >V
	EQUAL?	V,M-FATAL \?PRG97
?CND27:	SET	'L-PRSA,PRSA
	SET	'L-PRSO,PRSO
	SET	'L-PRSI,PRSI
	EQUAL?	V,M-FATAL \?CND3
	SET	'P-CONT,0
	SET	'P-NACTORS,0
	JUMP	?CND3
?ELS5:	GRTR?	P-NACTORS,1 \?ELS138
	JUMP	?CND3
?ELS138:	SET	'P-NACTORS,0
	SET	'P-CONT,0
?CND3:	ZERO?	P-WON /?PRG1
	EQUAL?	PRSA,V?UNSCRIPT,V?SCRIPT,V?RESTART /?PRG1
	EQUAL?	PRSA,V?QUIT,V?IMPOSSIBLE,V?CONFIGURE /?PRG1
	EQUAL?	PRSA,V?ADVANCED,V?SCORE,V?VERSION /?PRG1
	EQUAL?	PRSA,V?$TELL,V?RESTORE,V?SAVE \?ELS147
	JUMP	?PRG1
?ELS147:	CALL	CLOCKER >V
	JUMP	?PRG1


	.FUNCT	TICK
	CALL	CLOCKER
	RSTACK	


	.FUNCT	ALL-THERE?,CNT=1,MAX,RM
	GET	P-PRSO,P-MATCHLEN >MAX
	GET	P-PRSO,1
	LOC	STACK >RM
?PRG1:	IGRTR?	'CNT,MAX /TRUE
	GET	P-PRSO,CNT
	LOC	STACK
	EQUAL?	STACK,RM /?PRG1
	RFALSE	


	.FUNCT	PERFORM,A,O=0,I=0,V,OA,OO,OI
	SET	'OA,PRSA
	SET	'OO,PRSO
	SET	'OI,PRSI
	EQUAL?	IT,I,O \?CND1
	EQUAL?	P-IT-LOC,WINNER-HERE /?CND1
	PRINTI	"FC: I don't see what you are referring to."
	CRLF	
	RETURN	2
?CND1:	EQUAL?	O,IT \?CND10
	SET	'O,P-IT-OBJECT
?CND10:	EQUAL?	I,IT \?CND13
	SET	'I,P-IT-OBJECT
?CND13:	SET	'PRSA,A
	SET	'PRSO,O
	ZERO?	PRSO /?CND16
	EQUAL?	PRSA,V?WALK /?CND16
	SET	'P-IT-OBJECT,PRSO
	SET	'P-IT-LOC,WINNER-HERE
?CND16:	SET	'PRSI,I
	CALL	GAME-COMMAND?,A
	ZERO?	STACK /?ELS23
	GET	ACTIONS,A
	CALL	STACK >V
	JUMP	?CND21
?ELS23:	GETP	WINNER,P?ACTION
	CALL	STACK >V
	ZERO?	V /?ELS25
	JUMP	?CND21
?ELS25:	LOC	WINNER
	GETP	STACK,P?ACTION
	CALL	STACK,M-BEG >V
	ZERO?	V /?ELS27
	JUMP	?CND21
?ELS27:	GET	PREACTIONS,A
	CALL	STACK >V
	ZERO?	V /?ELS29
	JUMP	?CND21
?ELS29:	ZERO?	I /?ELS31
	GETP	I,P?ACTION
	CALL	STACK >V
	ZERO?	V /?ELS31
	JUMP	?CND21
?ELS31:	ZERO?	O /?ELS35
	EQUAL?	A,V?WALK /?ELS35
	LOC	O
	ZERO?	STACK /?ELS35
	LOC	O
	GETP	STACK,P?CONTFCN
	CALL	STACK >V
	ZERO?	V /?ELS35
	JUMP	?CND21
?ELS35:	ZERO?	O /?ELS39
	EQUAL?	A,V?WALK /?ELS39
	GETP	O,P?ACTION
	CALL	STACK >V
	ZERO?	V /?ELS39
	JUMP	?CND21
?ELS39:	GET	ACTIONS,A
	CALL	STACK >V
	ZERO?	V /?CND21
?CND21:	EQUAL?	V,M-FATAL /?CND44
	LOC	WINNER
	GETP	STACK,P?ACTION
	CALL	STACK,M-END >V
?CND44:	SET	'PRSA,OA
	SET	'PRSO,OO
	SET	'PRSI,OI
	RETURN	V


	.FUNCT	GAME-COMMAND?,ACT
	EQUAL?	ACT,V?SCORE,V?SAVE,V?RESTORE /TRUE
	EQUAL?	ACT,V?QUIT,V?VERSION,V?$VERIFY /TRUE
	EQUAL?	ACT,V?ADVANCED /TRUE
	RFALSE


	.FUNCT	BEGINNING
	PRINTI	"FC ALERT! Planetside systems are deteriorating. FC imbalance detected. Emergency reviving systems completed. You are now in control of the complex.

SENSA INTERRUPT: Seismic aftershock detected ten meters north of Beta FC. Tremor intensity 9.7. Projected damage: connecting cables in Primary and Secondary Channels.

FC INTERRUPT: All Robots, report locations.

"
	RTRUE	


	.FUNCT	SET-LAST-ROOM,COUNT=0
?PRG1:	INC	'COUNT
	EQUAL?	COUNT,8 /TRUE
	SUB	COUNT,1
	GET	NAME-TBL,STACK
	LOC	STACK
	PUT	LAST-ROOM,COUNT,STACK
	JUMP	?PRG1

	.ENDI
