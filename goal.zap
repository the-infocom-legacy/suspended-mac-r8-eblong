

	.FUNCT	KILL-GOAL,RBT,DRAG=0,GT,OFFSET
	GETP	RBT,P?ROBOT >OFFSET
	GET	GOAL-TABLES,OFFSET >GT
	PUT	GT,GOAL-S,0
	PUT	GT,GOAL-F,0
	PUT	GT,GOAL-ENABLE,1
	ZERO?	DRAG /FALSE
	PUT	DRAG-TBL,OFFSET,0
	RFALSE	


	.FUNCT	SET-GOAL,RBT,GOAL,HERE,HL,GL,GT,?TMP1
	LOC	RBT >HERE
	GETP	RBT,P?ROBOT
	GET	GOAL-TABLES,STACK >GT
	GETP	HERE,P?LINE
	MUL	STACK,12 >?TMP1
	GETP	GOAL,P?LINE
	MUL	STACK,2
	ADD	?TMP1,STACK
	PUT	GT,GOAL-I,STACK
	GETP	GOAL,P?STATION
	PUT	GT,GOAL-S,STACK
	PUT	GT,GOAL-F,GOAL
	PUT	GT,GOAL-ENABLE,1
	LOC	RBT
	RSTACK	


	.FUNCT	FOLLOW-GOAL,RBT,HERE,LINE,LN,RM,GT,GOAL,FLG,GOAL-FLAG=0,IGOAL=0,LOC,CNT=1,DIR
	LOC	RBT >HERE
	GETP	RBT,P?ROBOT
	GET	GOAL-TABLES,STACK >GT
	GET	GT,GOAL-F
	EQUAL?	HERE,STACK \?ELS3
	CALL	ARRIVAL,RBT
	EQUAL?	RBT,PEOPLE /FALSE
	RTRUE	
?ELS3:	GET	GT,GOAL-ENABLE
	ZERO?	STACK /FALSE
	GETP	HERE,P?STATION >LOC
	EQUAL?	LOC,HERE /?CND11
	CALL	MOVE-RBT,RBT,LOC
	RSTACK	
?CND11:	GET	GT,GOAL-I >IGOAL
	GET	TRANSFER-TABLE,IGOAL >GOAL
	ZERO?	GOAL \?CND14
	SET	'IGOAL,0
	GET	GT,GOAL-S >GOAL
?CND14:	ZERO?	GOAL /FALSE
	EQUAL?	HERE,GOAL \?CND17
	ZERO?	IGOAL /?ELS24
	ADD	IGOAL,1
	GET	TRANSFER-TABLE,STACK
	CALL	MOVE-RBT,RBT,STACK >FLG
	ZERO?	FLG \?CND26
	GET	GT,GOAL-F
	CALL	SET-GOAL,RBT,STACK
	RETURN	FLG
?CND26:	RETURN	FLG
?ELS24:	GET	GT,GOAL-F
	EQUAL?	HERE,STACK /?ELS30
	GET	GT,GOAL-F
	CALL	MOVE-RBT,RBT,STACK
	CALL	ARRIVAL,RBT
	RSTACK	
?ELS30:	CALL	ARRIVAL,RBT
	RSTACK	
?CND17:	GETP	GOAL,P?LINE
	CALL	GET-LINE,STACK >LINE
?PRG33:	GET	LINE,CNT >RM
	EQUAL?	RM,HERE \?ELS37
	ZERO?	GOAL-FLAG /?ELS40
	SUB	CNT,3
	GET	LINE,STACK >LOC
	JUMP	?CND38
?ELS40:	ADD	CNT,3
	GET	LINE,STACK >LOC
?CND38:	CALL	MOVE-RBT,RBT,LOC
	RETURN	STACK
?ELS37:	EQUAL?	RM,GOAL \?CND35
	SET	'GOAL-FLAG,1
?CND35:	ADD	CNT,3 >CNT
	JUMP	?PRG33


	.FUNCT	STUCK,RBT,WHERE,GT,TEMP,OFFSET
	GETP	RBT,P?ROBOT >OFFSET
	GET	GOAL-TABLES,OFFSET >GT
	SET	'TEMP,WINNER
	CALL	CHANGE-WINNER,RBT,1
	EQUAL?	WINNER,TEMP \?ELS3
	GET	STUCK-QUIPS,ROFF
	CALL	ROBOT-TELL,STACK,0
	JUMP	?CND1
?ELS3:	GET	INTER-TBL,ROFF
	PRINT	STACK
	PRINTI	" "
	GET	STUCK-QUIPS,ROFF
	PRINT	STACK
?CND1:	LOC	RBT
	PRINTD	STACK
	PRINTI	" to "
	EQUAL?	WINNER,IRIS \?ELS12
	PRINTI	"Angling Corridor"
	JUMP	?CND10
?ELS12:	PRINTD	WHERE
?CND10:	PRINTI	". "
	GET	MORE-STUCKS,ROFF
	PRINT	STACK
	CRLF	
	CALL	KILL-GOAL,RBT
	PUT	ROBOT-FOLLOW,OFFSET,0
	PUT	FOLLOW-TBL,ROFF,0
	CALL	CHANGE-WINNER,TEMP,1
	RTRUE	


	.FUNCT	MOVE-RBT,RBT,WHERE,L,COUNT=0,FLOC,FROB
	LOC	RBT >L
	CALL	MOVE-RBT?,RBT,L,WHERE
	ZERO?	STACK \TRUE
?PRG4:	INC	'COUNT
	EQUAL?	COUNT,7 /FALSE
	GET	FOLLOW-TBL,COUNT
	EQUAL?	STACK,RBT \?PRG4
	SUB	COUNT,1
	GET	NAME-TBL,STACK >FROB
	LOC	FROB >FLOC
	EQUAL?	FROB,IRIS \?ELS14
	EQUAL?	CORRIDOR-1,WHERE \?ELS14
	CALL	STUCK,IRIS,CPU-ROOM
	JUMP	?PRG4
?ELS14:	CALL	MOVE-RBT?,FROB,FLOC,WHERE
	JUMP	?PRG4


	.FUNCT	MOVE-RBT?,RBT,L,WHERE
	EQUAL?	L,HUMAN-ENTRY,HALLWAY-JUNCTION \?ELS5
	EQUAL?	WHERE,HUMAN-ENTRY,HALLWAY-JUNCTION \?ELS5
	EQUAL?	WEDGE-PLACED,2 /?ELS5
	EQUAL?	RBT,PEOPLE /?ELS5
	CALL	STUCK,RBT,WHERE
	RTRUE	
?ELS5:	EQUAL?	L,CORRIDOR-4 \?ELS9
	EQUAL?	WHERE,ACIDMIST \?ELS9
	ZERO?	ACID-FIXED \?ELS9
	EQUAL?	PEOPLE,RBT /?ELS9
	GETP	RBT,P?ROBOT
	GET	DEADBOTS,STACK
	ZERO?	STACK \?ELS16
	GETP	RBT,P?ROBOT
	PUT	DEADBOTS,STACK,1
	CALL	DO-THE-MOVE,RBT,L,WHERE
	RFALSE	
?ELS16:	CALL	DO-THE-MOVE,RBT,L,WHERE
	RFALSE	
?ELS9:	EQUAL?	L,HALL-END,CAR-AREA \?ELS20
	EQUAL?	WHERE,HALL-END,CAR-AREA \?ELS20
	CALL	STUCK,RBT,WHERE
	RTRUE	
?ELS20:	EQUAL?	RBT,IRIS \?ELS24
	EQUAL?	L,CPU-ROOM,CORRIDOR-1 \?ELS24
	EQUAL?	WHERE,CORRIDOR-1,CORRIDOR-2 \?ELS24
	MOVE	IRIS,CPU-ROOM
	SET	WHERE,CORRIDOR-1
	SET	L,CPU-ROOM
	CALL	STUCK,RBT,WHERE
	RTRUE	
?ELS24:	CALL	DO-THE-MOVE,RBT,L,WHERE
	RFALSE	


	.FUNCT	DO-THE-MOVE,RBT,L,WHERE,DRAGEE
	MOVE	RBT,WHERE
	EQUAL?	RBT,WINNER \?CND1
	SET	'WINNER-HERE,WHERE
?CND1:	GETP	RBT,P?ROBOT
	PUT	LAST-ROOM,STACK,L
	EQUAL?	RBT,PEOPLE /FALSE
	GETP	RBT,P?ROBOT
	GET	DRAG-TBL,STACK >DRAGEE
	ZERO?	DRAGEE /FALSE
	MOVE	DRAGEE,WHERE
	GETP	DRAGEE,P?ROBOT
	PUT	LAST-ROOM,STACK,L
	RFALSE	


	.FUNCT	COR-DIR,HERE,THERE,COR,RM,PAST=0,CNT=2,?TMP1
	GETP	THERE,P?CORRIDOR >?TMP1
	GETP	HERE,P?CORRIDOR
	BAND	?TMP1,STACK
	CALL	GET-COR,STACK >COR
?PRG1:	GET	COR,CNT >RM
	EQUAL?	RM,HERE \?ELS5
	SET	'PAST,1
	JUMP	?REP2
?ELS5:	EQUAL?	RM,THERE \?CND3
	JUMP	?REP2
?CND3:	INC	'CNT
	JUMP	?PRG1
?REP2:	GET	COR,PAST
	RSTACK	


	.FUNCT	GET-LINE,LN
	ZERO?	LN \?ELS5
	RETURN	A-LINE
?ELS5:	EQUAL?	LN,1 \?ELS7
	RETURN	B-LINE
?ELS7:	EQUAL?	LN,2 \?ELS9
	RETURN	C-LINE
?ELS9:	EQUAL?	LN,3 \?ELS11
	RETURN	D-LINE
?ELS11:	EQUAL?	LN,4 \?ELS13
	RETURN	E-LINE
?ELS13:	RETURN	F-LINE


	.FUNCT	GET-COR,NUM
	EQUAL?	NUM,1 \?ELS5
	RETURN	COR-1
?ELS5:	EQUAL?	NUM,2 \?ELS7
	RETURN	COR-2
?ELS7:	EQUAL?	NUM,4 \?ELS9
	RETURN	COR-4
?ELS9:	EQUAL?	NUM,8 \?ELS11
	RETURN	COR-8
?ELS11:	EQUAL?	NUM,16 \?ELS13
	RETURN	COR-16
?ELS13:	EQUAL?	NUM,32 \?ELS15
	RETURN	COR-32
?ELS15:	EQUAL?	NUM,64 \?ELS17
	RETURN	COR-64
?ELS17:	EQUAL?	NUM,128 \?ELS19
	RETURN	COR-128
?ELS19:	RETURN	COR-256


	.FUNCT	DIR-PRINT,DIR,CNT=0
?PRG1:	GET	DIR-STRINGS,CNT
	EQUAL?	STACK,DIR \?CND3
	EQUAL?	DIR,P?UP,P?DOWN /?CND6
	PRINTI	"the "
?CND6:	ADD	CNT,1
	GET	DIR-STRINGS,STACK
	PRINT	STACK
	RTRUE	
?CND3:	INC	'CNT
	JUMP	?PRG1


	.FUNCT	GOAL?,RBT
	GETP	RBT,P?ROBOT
	GET	GOAL-TABLES,STACK
	GET	STACK,GOAL-F
	RSTACK	


	.FUNCT	I-FOLLOW,FLG=0,CNT=0,GT
?PRG1:	IGRTR?	'CNT,CHARACTER-MAX \?ELS5
	RETURN	FLG
?ELS5:	GET	GOAL-TABLES,CNT >GT
	GET	GT,GOAL-S
	ZERO?	STACK /?PRG1
	GET	GT,GOAL-ENABLE
	ZERO?	STACK /?PRG1
	PUT	GT,GOAL-ENABLE,1
	GET	CHARACTER-TBL,CNT
	CALL	FOLLOW-GOAL,STACK
	ZERO?	STACK /?PRG1
	SET	'FLG,1
	JUMP	?PRG1


	.FUNCT	ARRIVAL,RBT,GT
	GETP	RBT,P?ROBOT
	GET	GOAL-TABLES,STACK >GT
	PUT	GT,GOAL-S,0
	PUT	GT,GOAL-F,0
	GET	GT,GOAL-FUNCTION
	CALL	STACK,RBT,G-REACHED
	RTRUE	


	.FUNCT	G-ROBOT,RBT,GARG,TEMP,COUNT,CHASED,?TMP1
	EQUAL?	GARG,G-REACHED \FALSE
	SET	'TEMP,WINNER
	CALL	CHANGE-WINNER,RBT,1
	CRLF	
	EQUAL?	WINNER,TEMP \?ELS8
	GET	ARRIVAL-QUIPS,ROFF
	CALL	ROBOT-TELL,STACK,0
	JUMP	?CND6
?ELS8:	GET	INTER-TBL,ROFF
	PRINT	STACK
	PRINTI	" "
	GET	ARRIVAL-QUIPS,ROFF
	PRINT	STACK
?CND6:	CALL	KILL-GOAL,WINNER,1
	LOC	WINNER
	PRINTD	STACK
	PRINTI	"."
	GET	ROBOT-FOLLOW,ROFF >CHASED
	ZERO?	CHASED /?CND15
	LOC	CHASED >?TMP1
	LOC	RBT
	EQUAL?	?TMP1,STACK /?CND15
	PRINTI	" Looks like I missed "
	CALL	NDESC,CHASED
	PRINTI	" though."
	CRLF	
?CND15:	GETP	RBT,P?ROBOT
	PUT	ROBOT-FOLLOW,STACK,0
	GETP	WINNER-HERE,P?ACTION
	CALL	STACK,M-ENTER
	CRLF	
	CALL	CHANGE-WINNER,TEMP,1
	RETURN	2


	.FUNCT	G-PEOPLE,RBT,GARG,COUNT
	EQUAL?	GARG,G-REACHED \FALSE
	EQUAL?	PR-NUMBER,1 \?ELS10
	CALL	PARRIVE1
	RSTACK	
?ELS10:	EQUAL?	PR-NUMBER,2 \?ELS12
	CALL	PARRIVE2
	RSTACK	
?ELS12:	EQUAL?	PR-NUMBER,3 \?ELS14
	CALL	PARRIVE3
	RSTACK	
?ELS14:	EQUAL?	PR-NUMBER,4 \?ELS16
	CALL	PARRIVE4
	RSTACK	
?ELS16:	EQUAL?	PR-NUMBER,5 \?ELS18
	CALL	PARRIVE5
	RSTACK	
?ELS18:	EQUAL?	PR-NUMBER,6 \?ELS20
	CALL	PARRIVE6
	RSTACK	
?ELS20:	EQUAL?	PR-NUMBER,7 \?ELS22
	CALL	PARRIVE7
	RSTACK	
?ELS22:	EQUAL?	PR-NUMBER,8 \?ELS24
	CALL	PARRIVE8
	RSTACK	
?ELS24:	EQUAL?	PR-NUMBER,9 \FALSE
	CALL	PARRIVE9
	RSTACK	


	.FUNCT	CORRIDOR-LOOK,ITM=0,C,Z,COR,VAL,FOUND=0
	GETP	WINNER-HERE,P?CORRIDOR >C
	ZERO?	C /FALSE
?PRG6:	SUB	C,256 >Z
	LESS?	Z,0 /?ELS10
	SET	'COR,COR-256
	JUMP	?CND8
?ELS10:	SUB	C,128 >Z
	LESS?	Z,0 /?ELS12
	SET	'COR,COR-128
	JUMP	?CND8
?ELS12:	SUB	C,64 >Z
	LESS?	Z,0 /?ELS14
	SET	'COR,COR-64
	JUMP	?CND8
?ELS14:	SUB	C,32 >Z
	LESS?	Z,0 /?ELS16
	SET	'COR,COR-32
	JUMP	?CND8
?ELS16:	SUB	C,16 >Z
	LESS?	Z,0 /?ELS18
	SET	'COR,COR-16
	JUMP	?CND8
?ELS18:	SUB	C,8 >Z
	LESS?	Z,0 /?ELS20
	SET	'COR,COR-8
	JUMP	?CND8
?ELS20:	SUB	C,4 >Z
	LESS?	Z,0 /?ELS22
	SET	'COR,COR-4
	JUMP	?CND8
?ELS22:	SUB	C,2 >Z
	LESS?	Z,0 /?ELS24
	SET	'COR,COR-2
	JUMP	?CND8
?ELS24:	SUB	C,1 >Z
	LESS?	Z,0 /?REP7
	SET	'COR,COR-1
?CND8:	CALL	CORRIDOR-CHECK,COR,ITM >VAL
	ZERO?	FOUND \?CND29
	SET	'FOUND,VAL
?CND29:	SET	'C,Z
	JUMP	?PRG6
?REP7:	RETURN	FOUND


	.FUNCT	CORRIDOR-CHECK,COR,ITM,CNT=2,PAST=0,FOUND=0,RM,OBJ
?PRG1:	GET	COR,CNT >RM
	ZERO?	RM /FALSE
	EQUAL?	RM,WINNER-HERE \?ELS7
	SET	'PAST,1
	JUMP	?CND3
?ELS7:	FIRST?	RM >OBJ \?CND3
?PRG10:	ZERO?	ITM /?ELS14
	EQUAL?	OBJ,ITM \?CND12
	GET	COR,PAST >FOUND
	JUMP	?REP11
?ELS14:	GETP	OBJ,P?ROBOT
	ZERO?	STACK /?CND12
	GETP	OBJ,P?ROBOT
	EQUAL?	STACK,7 \?ELS23
	PRINTI	"Some "
	CALL	NDESC,OBJ
	PRINTI	" are "
	JUMP	?CND21
?ELS23:	CALL	NDESC,OBJ
	PRINTI	" is "
?CND21:	CALL	IN-MOTION?,OBJ
	ZERO?	STACK /?CND30
	PRINTI	"in motion "
?CND30:	PRINTI	"off to "
	GET	COR,PAST
	CALL	DIR-PRINT,STACK
	CALL	DRAGGING?,OBJ
	PRINTI	"."
	EQUAL?	OBJ,PEOPLE \?CND39
	ZERO?	CHASING-THIEF /?CND39
	EQUAL?	WINNER,RTHIEF \?CND39
	PRINTI	" They appear to be in hot pursuit."
?CND39:	CRLF	
?CND12:	NEXT?	OBJ >OBJ /?KLU53
?KLU53:	ZERO?	OBJ \?PRG10
?REP11:	ZERO?	FOUND /?CND3
	RETURN	FOUND
?CND3:	INC	'CNT
	JUMP	?PRG1


	.FUNCT	DRAGGING?,RBT,DRAGEE
	EQUAL?	RBT,PEOPLE /FALSE
	GETP	RBT,P?ROBOT
	GET	DRAG-TBL,STACK >DRAGEE
	ZERO?	DRAGEE /FALSE
	PRINTI	", dragging "
	CALL	NDESC,DRAGEE
	RFALSE	


	.FUNCT	IN-MOTION?,RBT,GT,?TMP1
	GETP	RBT,P?ROBOT
	GET	GOAL-TABLES,STACK >GT
	GET	GT,GOAL-ENABLE
	ZERO?	STACK /FALSE
	GET	GT,GOAL-S
	ZERO?	STACK /FALSE
	LOC	RBT >?TMP1
	GET	GT,GOAL-F
	EQUAL?	?TMP1,STACK /FALSE
	RTRUE	

	.ENDI
